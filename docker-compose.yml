version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["php-fpm"]

  queue:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    depends_on:
      - redis
    command: ["php", "artisan", "queue:work"]

  webserver:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started

  db:
    image: mariadb:10.6
    container_name: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
      - ./laravel.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "8025:8025" 
      - "1025:1025"
volumes:
  db_data:
